(DONE) -Add dynamic memory allocations 

(DONE) -Add debug mode (already exists in input.dat; just add if cases to code)

(DONE) -include performance timing measurements for key kernels within the code

(DONE) -Add verification mode which will enable your code to compute the difference between your numerical solution and the analytic solution. Your code should output this error norm within the standard output when running in verification mode. (already exists in input.dat; but I need to check whether analytical solution exists for this problem.)

(DONE) -perform asymptotic convergence analysis and provide a log-log plot of the results for all methods (pick a time, let's say t=5 sec, and plot l2 norm at that time vs 1/step size (or maybe step size) (in loglog) for all 3 methods and for both problems; do outside regular code)

(DONE) -compare timings of my RK4 to GSL's implementation

(DONE) -For simple ODE:Show convergence to the analytical solution as a function of h. Also compare the performance of your implementation to that of the tpl implementation.

(DONE) -For charged particle motion:Analyze the performance and convergence of each of the methods.

(DONE) -Correct permissions

-Add comments to code

-Add to make:It must also have an option to run a suite of regression tests via the “make check” target. It also should support a “make coverage” target that uses lcov/gcov to process the results from the test suite. (in class notes; spend some time on make check. make coverage is very easy; there is a video.)

-Prepare the presentation

-Submit the tarball of the code and the presentation to Canvas
